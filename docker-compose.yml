version: '3'
networks:
  backend:
    driver: ${NETWORKS_DRIVER}

services:
  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql
    restart: always
    environment:
      - TZ=${TZ}
      - MYSQL_USER=${MYSQL_USERNAME}                  # 设置 Mysql 用户名称
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}              # 设置 Mysql 用户密码
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}    # 设置 Mysql root 用户密码
    privileged: true
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql        # 引用 .env 配置中 DATA_PATH_HOST 变量，将宿主机上存放 Mysql 数据的目录挂载到容器中 /var/lib/mysql 目录
    ports:
      - "${MYSQL_PORT}:3306"                          # 设置容器3306端口映射指定宿主机端口
    networks:
      - backend

  redis:
    image: redis:${REDIS_VERSION}
    container_name: redis
    environment:
      - TZ=${TZ}
    privileged: true
    volumes:
      - ${DATA_PATH_HOST}/redis:/data  # 将宿主机上存放redis数据的目录挂载到容器中
    ports:
      - "${REDIS_PORT}:6379"
    restart: always
    networks:
      - backend

  mongo:
    image: mongo:${MONGO_VERSION}
    container_name: mongo
    restart: always
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - ${MONGO_DIR}/db:/data/db # 挂载数据目录
      - ${MONGO_DIR}/log:/var/log/mongodb  # 挂载日志目录
    privileged: true  # 设置容器的权限为root
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    networks:
      - backend


  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    container_name: zookeeper
    ports:
      - "${ZK_PORT}:2181"
    volumes:
      - ${ZK_DIR}/bitnami:/bitnami
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes # 匿名登录
    networks:
      - backend

  kafka:
    image: docker.io/bitnami/kafka:3.4
    container_name: kafka
    ports: #记得在防火墙开放端口
      - "${KAFKA_PORT_1}:9092"
      - "${KAFKA_PORT_2}:9093"
    volumes:
      - ${KAFKA_DIR}/bitnami:/bitnami
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes # 配置监听者的安全协议
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT # 定义Kafka Broker的Listener的配置项，配置外部访问和内部访问
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://0.0.0.0:9093 # 将Broker的Listener信息发布到Zookeeper中，供Clients（Producer/Consumer）使用
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://192.168.0.101:9093 # dev.wsl.net 换成自己的ip
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    networks:
      - backend




  #收集业务数据 - Collect business data
#  filebeat:
#    image: elastic/filebeat:8.15.0
#    container_name: filebeat
#    environment:
#      TZ: Asia/Shanghai
#    user: root
#    restart: always
#    entrypoint: "filebeat -e -strict.perms=false"  #解决配置文件权限问题 - Solving the configuration file permissions
#    volumes:
#      - ./deploy/filebeat/conf/filebeat.yml:/usr/share/filebeat/filebeat.yml
#      # 此处需指定docker的containers目录，取决于你docker的配置 - The containers directory of docker needs to be specified here, depending on your docker configuration
#      # 如snap安装的docker，则为/var/snap/docker/common/var-lib-docker/containers - Example if docker is installed by Snap /var/snap/docker/common/var-lib-docker/containers
#      # - /var/snap/docker/common/var-lib-docker/containers:/var/lib/docker/containers
#      - /var/lib/docker/containers:/var/lib/docker/containers
#    depends_on:
#      - kafka

  #消费kafka中filebeat收集的数据输出到es
#  go-stash:
#    image: kevinwan/go-stash:1.0-arm64
#    container_name: go-stash
#    environment:
#      TZ: Asia/Shanghai
#    user: root
#    restart: always
#    volumes:
#      - ./deploy/go-stash/etc:/app/etc
#    depends_on:
#      - elasticsearch
#      - kafka

  #收集kafka业务日志、存储prometheus监控数据
#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.4
#    container_name: elasticsearch
#    user: root
#    environment:
#      - discovery.type=single-node
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#      - TZ=Asia/Shanghai
#    volumes:
#      - ./data/elasticsearch/data:/usr/share/elasticsearch/data
#    restart: always
#    ports:
#      - 9200:9200
#      - 9300:9300

  #查看elasticsearch数据
#  kibana:
#    image: docker.elastic.co/kibana/kibana:7.13.4
#    container_name: kibana
#    environment:
#      - elasticsearch.hosts=http://elasticsearch:9200
#      - TZ=Asia/Shanghai
#    restart: always
#    ports:
#      - "5601:5601"
#    depends_on:
#      - elasticsearch
