syntax = "proto3";

package order;

// protoc-gen-go 版本大于1.4.0, proto文件需要加上go_package,否则无法生成
option go_package = "./order";

message Empty {
}

message OrderReq {
  string ip = 1;
  string symbol = 2;
  int64 page = 4;
  int64 pageSize = 5;
  int64 userId = 6;
  double price = 7;
  double amount = 8;
  string direction = 9;
  string type = 10;
  int32 useDiscount = 11;
  string orderId = 12;
  int32 updateStatus = 13;
}

message AddOrderResp {
  string orderId = 1;
}

message OrderResp {
  repeated ExchangeOrder list = 1;
  int64 total = 2;
}

message ExchangeOrder{
  int64 id = 1;
  string orderId = 2;
  double amount = 3;
  string baseSymbol = 4;
  int64 canceledTime = 5;
  string coinSymbol = 6;
  int64 completedTime = 7;
  string direction = 8;
  int64 userId = 11;
  double price = 12;
  int32 status = 13;
  string symbol = 14;
  int64 time = 15;
  double tradedAmount = 16;
  double turnover = 17;
  string type = 18;
  string useDiscount = 21;
}

// 取消订单
message CancelOrderResp {
  string orderId = 1;
}

// 下单请求
message CreateOrderItem {
  int64 userId = 1;
  string symbol = 2;  // 交易对
  double price = 3;  // 价格
  double amount = 4;  // 下单数量
  string direction = 5;  // 订单方向 买入 或 卖出
  string type = 6;   // 订单类型 市价单 或者 限价单
  int32 useDiscount = 7;  // 是否使用折扣
  string orderId = 8;    // 订单id
}

message CreateOrderRequest {
    CreateOrderItem item = 1;
    string baseSymbol = 2;
    string coinSymbol = 3;
    double baseBalance = 4;
    double coinBalance = 5;
}

message SendOrderRequest {
  string orderId = 1;
}



service OrderService {
  // 下单，内部使用dtm，createOrder、createOrderRevert、账户服务
  rpc AddOrder(OrderReq) returns(AddOrderResp);
  // 创建订单
  rpc CreateOrder(CreateOrderRequest) returns(AddOrderResp);
  // 创建订单补偿
  rpc CreateOrderRevert(CreateOrderRequest) returns(AddOrderResp);
  // 取消订单
  rpc CancelOrder(OrderReq) returns(CancelOrderResp);
  // 获取用户历史订单列表
  rpc GetHistoryOrder(OrderReq) returns(OrderResp);
  // 获取用户当前订单列表
  rpc GetCurrentOrder(OrderReq) returns(OrderResp);
  // 查询订单
  rpc FindByOrderId(OrderReq) returns(ExchangeOrder);
  // 将订单发送到买卖盘
  rpc SendOrder2Plate(SendOrderRequest) returns(Empty);
  // 撤销 将订单发送到买卖盘
  rpc SendOrder2PlateRevert(SendOrderRequest) returns(Empty);
}