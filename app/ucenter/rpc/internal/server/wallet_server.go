// Code generated by goctl. DO NOT EDIT.
// Source: wallet.proto

package server

import (
	"context"
	"grpc-common/ucenter/types/wallet"
	"ucenter-rpc/internal/logic"
	"ucenter-rpc/internal/svc"
)

type WalletServer struct {
	svcCtx *svc.ServiceContext
	wallet.UnimplementedWalletServer
}

func NewWalletServer(svcCtx *svc.ServiceContext) *WalletServer {
	return &WalletServer{
		svcCtx: svcCtx,
	}
}


func (s *WalletServer) FindWalletBySymbol(ctx context.Context, in *wallet.WalletReq) (*wallet.UserWallet, error) {
	l := logic.NewWalletLogic(ctx, s.svcCtx)
	return l.FindWalletBySymbol(in)
}


func (s *WalletServer) FindWallet(ctx context.Context, in *wallet.WalletReq) (*wallet.FindWalletResp, error) {
	l := logic.NewWalletLogic(ctx, s.svcCtx)
	return l.FindWallet(in)
}

func (s *WalletServer) ResetWalletAddress(ctx context.Context, in *wallet.WalletReq) (*wallet.WalletResp, error) {
	l := logic.NewWalletLogic(ctx, s.svcCtx)
	return l.ResetWalletAddress(in)
}

func (s *WalletServer) GetAllTransactions(ctx context.Context, in *wallet.AssetReq) (*wallet.UserTransactionListResp, error) {
	l := logic.NewWalletLogic(ctx, s.svcCtx)
	return l.GetAllTransactions(in)
}

func (s *WalletServer) GetAddress(ctx context.Context, in *wallet.AssetReq) (*wallet.AddressListResp, error) {
	l := logic.NewWalletLogic(ctx, s.svcCtx)
	return l.GetAddress(in)
}

func (s *WalletServer) FreezeUserAsset(ctx context.Context, in *wallet.FreezeUserAssetReq) (*wallet.Empty, error) {
	l := logic.NewWalletLogic(ctx, s.svcCtx)
	return l.FreezeUserAsset(in)
}
func (s *WalletServer) UnFreezeUserAsset(ctx context.Context, in *wallet.FreezeUserAssetReq) (*wallet.Empty, error) {
	l := logic.NewWalletLogic(ctx, s.svcCtx)
	return l.UnFreezeUserAsset(in)
}
func (s *WalletServer) DeductUserAsset(ctx context.Context, in *wallet.DeductUserAssetReq) (*wallet.Empty, error) {
	l := logic.NewWalletLogic(ctx, s.svcCtx)
	return l.DeductUserAsset(in)
}
func (s *WalletServer) AddUserAsset(ctx context.Context, in *wallet.AddUserAssetReq) (*wallet.Empty, error) {
	l := logic.NewWalletLogic(ctx, s.svcCtx)
	return l.AddUserAsset(in)
}