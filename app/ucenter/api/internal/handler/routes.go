// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"
	"ucenter-api/internal/handler/approve"
	"ucenter-api/internal/handler/login"
	"ucenter-api/internal/handler/register"
	"ucenter-api/internal/handler/wallet"
	"ucenter-api/internal/handler/withdraw"
	"ucenter-api/internal/middleware"

	"ucenter-api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	addRegisterRouters(server, serverCtx)
	addLoginRouters(server, serverCtx)
	addWalletRouters(server, serverCtx)
	addWithdrawRouters(server, serverCtx)
	addSecurityRouters(server, serverCtx)
}

// 注册相关
func addRegisterRouters(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/uc/register/phone",
				Handler: register.RegisterHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/uc/mobile/code",
				Handler: register.SendCodeHandler(serverCtx),
			},
		},
	)
}

// 登录相关
func addLoginRouters(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/uc/login",
				Handler: login.LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/uc/check/login",
				Handler: login.CheckLoginHandler(serverCtx),
			},
		},
	)
}

// 钱包
func addWalletRouters(server *rest.Server, serverCtx *svc.ServiceContext) {
	routers := []rest.Route{
		{
			Method:  http.MethodPost,
			Path:    "/uc/asset/wallet/:coinName",
			Handler: wallet.WalletHandler(serverCtx),  // 获取用户钱包信息
		},
		{
			Method:  http.MethodPost,
			Path:    "/uc/asset/wallet",
			Handler: wallet.FindWallet(serverCtx),
		},
		{
			Method:  http.MethodPost,
			Path:    "/uc/asset/wallet/reset-address",
			Handler: wallet.ResetWalletAddress(serverCtx),
		},
		{
			Method:  http.MethodPost,
			Path:    "/uc/asset/transaction/all",
			Handler: wallet.GetAllTransactions(serverCtx),
		},
	}
	server.AddRoutes(
		rest.WithMiddleware(middleware.Auth(serverCtx.Config.Jwt.AccessSecret), routers...),
	)
}

// 提现
func addWithdrawRouters(server *rest.Server, serverCtx *svc.ServiceContext) {
	routers := []rest.Route{
		{
			Method:  http.MethodPost,
			Path:    "/uc/withdraw/support/coin/info",
			Handler: withdraw.GetSupportedCoinInfo(serverCtx),
		},
		{
			Method:  http.MethodPost,
			Path:    "/uc/mobile/withdraw/code",
			Handler: withdraw.SendCode(serverCtx),
		},
		{
			Method:  http.MethodPost,
			Path:    "/uc/withdraw/apply/code",
			Handler: withdraw.Withdraw(serverCtx),
		},
		{
			Method:  http.MethodPost,
			Path:    "/uc/withdraw/record",
			Handler: withdraw.Record(serverCtx),
		},
	}
	server.AddRoutes(
		rest.WithMiddleware(middleware.Auth(serverCtx.Config.Jwt.AccessSecret), routers...),
	)
}

// 安全
func addSecurityRouters(server *rest.Server, serverCtx *svc.ServiceContext) {
	routers := []rest.Route{
		{
			Method:  http.MethodPost,
			Path:    "/uc/approve/security/setting",
			Handler: approve.SecuritySetting(serverCtx),
		},
	}
	server.AddRoutes(
		rest.WithMiddleware(middleware.Auth(serverCtx.Config.Jwt.AccessSecret), routers...),
	)
}