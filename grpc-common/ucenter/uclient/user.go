// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package uclient

import (
	"context"
	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
	"grpc-common/ucenter/types/user"
)

type (
	UserRequest = user.UserRequest
	UserInfoResp    = user.UserInfoResp

	User interface {
		FindUserById(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserInfoResp, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) FindUserById(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserInfoResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.FindUserById(ctx, in, opts...)
}
