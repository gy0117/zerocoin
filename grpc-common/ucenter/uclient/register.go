// Code generated by goctl. DO NOT EDIT.
// Source: register.proto

package uclient

import (
	"context"

	"grpc-common/ucenter/types/register"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CaptchaReq = register.CaptchaReq
	RegisterReq     = register.RegisterReq
	RegisterResp    = register.RegisterResp
	CodeReq     = register.CodeReq
	CodeResp    = register.CodeResp

	Register interface {
		RegisterByPhone(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error)
		SendCode(ctx context.Context, in *CodeReq, opts ...grpc.CallOption) (*CodeResp, error)
	}

	defaultRegister struct {
		cli zrpc.Client
	}
)

func NewRegister(cli zrpc.Client) Register {
	return &defaultRegister{
		cli: cli,
	}
}

func (m *defaultRegister) RegisterByPhone(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error) {
	client := register.NewRegisterClient(m.cli.Conn())
	return client.RegisterByPhone(ctx, in, opts...)
}

func (m *defaultRegister) SendCode(ctx context.Context, in *CodeReq, opts ...grpc.CallOption) (*CodeResp, error) {
	client := register.NewRegisterClient(m.cli.Conn())
	return client.SendCode(ctx, in, opts...)
}